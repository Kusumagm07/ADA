#include <stdio.h>
#define MAX 20

int board[MAX][MAX], N;

int isSafe(int row, int col) {
    int i, j;
    for (i = 0; i < col; i++)
        if (board[row][i]) return 0;
    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j]) return 0;
    for (i = row, j = col; i < N && j >= 0; i++, j--)
        if (board[i][j]) return 0;
    return 1;
}

int solveNQUtil(int col) {
    if (col >= N) return 1;
    for (int i = 0; i < N; i++) {
        if (isSafe(i, col)) {
            board[i][col] = 1;
            if (solveNQUtil(col + 1)) return 1;
            board[i][col] = 0;
        }
    }
    return 0;
}

void printBoard() {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++)
            printf("%c ", board[i][j] ? 'Q' : '.');
        printf("\n");
    }
}

int main() {
    printf("Enter number of queens (4 to 20): ");
    if (scanf("%d", &N) != 1 || N < 4 || N > 20) {
        printf("Invalid input!\n");
        return 1;
    }

    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++)
            board[i][j] = 0;

    if (solveNQUtil(0)) {
        printf("One of the solutions:\n");
        printBoard();
    } else {
        printf("No solution exists for %d queens.\n", N);
    }

    return 0;
}
