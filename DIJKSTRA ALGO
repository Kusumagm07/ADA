#include <stdio.h>
#define INF 9999
#define MAX 10

void dijkstra(int graph[MAX][MAX], int n, int src) {
    int dist[MAX], visited[MAX] = {0}, i, j, u, minDist;

    for (i = 0; i < n; i++)
        dist[i] = INF;
    dist[src] = 0;

    for (i = 0; i < n; i++) {
        minDist = INF;
        for (j = 0; j < n; j++)
            if (!visited[j] && dist[j] < minDist) {
                minDist = dist[j];
                u = j;
            }

        visited[u] = 1;

        for (j = 0; j < n; j++)
            if (!visited[j] && graph[u][j] && dist[u] + graph[u][j] < dist[j])
                dist[j] = dist[u] + graph[u][j];
    }

    printf("Distances from vertex %d:\n", src);
    for (i = 0; i < n; i++)
        printf("%d -> %d = %d\n", src, i, dist[i]);
}

int main() {
    int n, src, i, j, graph[MAX][MAX];

    printf("Vertices count: ");
    scanf("%d", &n);

    printf("Adjacency matrix (0 = no edge):\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
            if (graph[i][j] == 0 && i != j)
                graph[i][j] = INF;
        }

    printf("Source vertex: ");
    scanf("%d", &src);

    dijkstra(graph, n, src);
    return 0;
}
